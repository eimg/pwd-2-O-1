import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Button } from "@/components/ui/button";
import { Play, Clapperboard } from "lucide-react";
import Link from "next/link";
import type { GenreType } from "@/types/global";
import { Input } from "@/components/ui/input";
import { redirect } from "next/navigation";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

async function fetchGenres(): Promise<GenreType[]> {
	const res = await fetch("https://api.themoviedb.org/3/genre/movie/list", {
		headers: {
			Authorization: `Bearer ${process.env.TMDB_KEY}`,
		},
	});

	const data = await res.json();
	return data.genres;
}

async function search(form: FormData) {
    "use server";

	const q = form.get("q");

	redirect(`/search?q=${q}`);
}

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const genres = await fetchGenres();

	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
				<div>
					<div className="p-4 border-b flex items-center justify-between">
						<h1 className="text-2xl font-bold flex gap-2 items-center">
							<Clapperboard />
							Next Movie
						</h1>
						<form
							action={search}
							className="flex items-center gap-2">
							<Input
								placeholder="Search"
								name="q"
							/>
							<Button>Search</Button>
						</form>
					</div>
					<div className="flex">
						<div className="p-4 border-r w-[200px] flex flex-col gap-2">
							<Button
								asChild
								variant="outline"
								className="justify-start">
								<Link
									href="/"
									className="flex items-center gap-2 justify-start">
									<Play /> All Movies
								</Link>
							</Button>
							{genres.map(genre => {
								return (
									<Button
										asChild
										key={genre.id}
										variant="outline"
										className="justify-start">
										<Link
											href={`/genre/${genre.name}/${genre.id}`}
											className="flex items-center gap-2 justify-start">
											<Play /> {genre.name}
										</Link>
									</Button>
								);
							})}
						</div>
						<div className="p-4">{children}</div>
					</div>
				</div>
			</body>
		</html>
	);
}
